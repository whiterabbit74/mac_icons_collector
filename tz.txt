ТЗ: Менеджер иконок меню‑бара для macOS (Swift, Apple Silicon)

Версия: 1.0
Дата: 28 сентября 2025
Цель: Создать утилиту для macOS, которая собирает/сворачивает часть иконок в правой области меню‑бара, освобождая место. Приложение живёт только как иконка в меню‑баре.

⸻

1) Краткое описание

Приложение добавляет собственную иконку в меню‑бар (далее — Toggle) и «эластичный» элемент‑разделитель (Spacer), который управляет видимой шириной правой части меню‑бара. Пользователь с помощью Toggle разворачивает/сворачивает «скрытую зону». Какие именно иконки попадают в скрытую зону — определяется пользователем через стандартное перетаскивание с зажатым ⌘ (Command) по отношению к позиции Toggle/Spacer.

Важно: Не используются приватные API для перемещения чужих NSStatusItem. Логика основана на документированном поведении меню‑бара: элементы, находящиеся правее «барьера» и при недостатке места — скрываются системой. Мы управляем шириной «барьера».

⸻

2) Целевая платформа
	•	CPU: Apple Silicon (arm64, M‑серии).
	•	macOS: 13 Ventura и выше (официальная поддержка 13–15).
	•	Язык: Swift 5.9+
	•	UI‑стек: AppKit (NSStatusBar/NSStatusItem) + SwiftUI для настроек (Preferences).
	•	Дистрибуция: notarized DMG (App Store — опционально).

⸻

3) Пользовательские сценарии
	1.	Свернуть иконки: клик по Toggle скрывает «правую зону» (иконки, расположенные правее барьера), оставляя в поле зрения только «важные» слева.
	2.	Развернуть иконки: повторный клик показывает все иконки. Возможна автосвертка по таймауту.
	3.	Настройка порядка: пользователь удерживает ⌘ и перетаскивает нужные иконки правее/левее Toggle, тем самым формируя, что будет скрываться.
	4.	Тонкая настройка ширины скрытия: в поповере — слайдер (или горизонтальный «ползунок‑ручка») меняет длину Spacer в реальном времени.
	5.	Темы: светлая/тёмная/авто (следовать системе) + опция монохромной иконки.

⸻

4) Функциональные требования

4.1. Иконка приложения (статус‑бар)
	•	Программа существует только как иконка в меню‑баре.
	•	Стандартная иконка: стрелка «вниз» (dropdown).
	•	Выбор иконки: в настройках — галерея предустановок (PDF template, вектор), + импорт пользовательской монохромной PDF/SF Symbols.
	•	Поддержка состояний: Collapsed, Expanded, Active/Pressed (варианты штриховки/заливки).

4.2. Скрытие/раскрытие
	•	Два NSStatusItem: Toggle (фиксированной ширины) и Spacer (переменной ширины, NSVariableStatusItemLength).
	•	Collapsed: Spacer имеет конфигурируемую ширину Wc (px), заставляя систему «ужать» правую часть (иконки за пределами — скрываются).
	•	Expanded: Spacer с шириной 0.
	•	Анимация длительностью 120–200 мс (плавное изменение ширины с шагами).
	•	Опции:
	•	Автосвертка через T секунд (0 = выкл).
	•	Горячая клавиша (глобальная) для переключения состояний.
	•	Режим «только пока зажат модификатор» (Press‑and‑hold to peek).
	•	Отдельные Wc для каждого дисплея.

4.3. Темы и внешний вид
	•	Темы: Светлая, Тёмная, Автоматическая (следовать системной).
	•	Режим монохромной иконки для лучшей читаемости.
	•	Отдельные наборы PDF‑иконок для Light/Dark, или один вектор с динамической заливкой.
	•	Настраиваемый размер иконки (по умолчанию системный).

4.4. Настройки (Preferences)

Разделы:
	•	General:
	•	Autostart (Launch at login через SMAppService).
	•	Горячая клавиша (регистрация через Carbon Event HotKey или альтернативный фреймворк).
	•	Таймаут автосвертки.
	•	Поведение по клику: Тоггл/Поповер.
	•	Appearance:
	•	Тема: Светлая / Тёмная / Авто.
	•	Монохром / Акцент.
	•	Выбор иконки приложения (галерея + импорт).
	•	Behavior:
	•	Ширина скрытия Wc (слайдер) + кнопка «Калибровать».
	•	Отдельные профили по дисплеям (если «Displays have separate Spaces»).
	•	Режим «peek while pressed».
	•	Shortcuts & Tips:
	•	Пошаговая инструкция с GIF: как перетаскивать иконки с ⌘.
	•	Быстрые подсказки по проблемам (иконка не двигается, конфликт, и т.п.).

4.5. Поповер (опционально)
	•	Мини‑панель при клике по Toggle:
	•	Кнопки: Expand/Collapse, переключатель темы, быстрый доступ к ширине Wc (мини‑ползунок).
	•	Статус по дисплею (какой активен, текущая ширина).
	•	Кнопка «Открыть настройки».

4.6. Многодисплейность
	•	Приложение показывает Toggle и Spacer на всех меню‑барах, когда включён системный режим «Displays have separate Spaces».
	•	Хранить Wc пер‑дисплей (по идентификатору NSScreen).
	•	Опция — синхронизировать ширину между дисплеями.

4.7. Локализация
	•	RU/EN из коробки (Localizable.strings).
	•	Динамическое переключение без перезапуска.

4.8. Обновления и права
	•	Автообновления: Sparkle (если вне Mac App Store).
	•	Права/разрешения: не требуются (нет AX/ScreenRecording), кроме Login Items.
	•	Sandbox: включён (для MAS);

⸻

5) Нефункциональные требования
	•	Производительность: среднее потребление CPU ≈ 0% в простое; пиково < 5% при анимациях.
	•	Память: < 60 МБ RSS.
	•	Энергия: фоновая активность минимальна; без таймеров с частым тиком.
	•	Надёжность: устойчивость при изменении разрешений/добавлении дисплеев «на лету».
	•	Совместимость: корректная работа с вырезом‑«notch» и длинными часами/датой.

⸻

6) Архитектура и компоненты
	•	AppDelegate / Lifecycle — запуск, регистрация Login Item, инициализация тем.
	•	StatusBarCoordinator — создаёт/управляет NSStatusItem для Toggle и Spacer.
	•	SpacerController — изменяет длину Spacer (CAAnimation/тайминги), хранит Wc, таймауты автосвертки, профили по дисплеям.
	•	HotkeyManager — глобальные шорткаты.
	•	PreferencesUI (SwiftUI) — экраны настроек, модель AppSettings (Codable + UserDefaults).
	•	ThemeManager — светлая/тёмная/авто, монохром, динамика в иконках.
	•	PopoverUI — быстрые действия и мини‑контролы.
	•	Telemetry (опц.) — только локальные логи (OSLog), без сетевой аналитики.

Диаграмма данных:
UserDefaults <-> AppSettings <-> SpacerController/ThemeManager/HotkeyManager <-> StatusBarCoordinator

⸻

7) UX‑детали
	•	Onboarding (первый запуск):
	1.	Тост «Перетащите лишние иконки вправо от нашей стрелки, удерживая ⌘».
	2.	Встроенная «калибровка»: потяните ползунок — наблюдайте, как иконки исчезают/появляются.
	•	Состояния иконки:
	•	Collapsed — стрелка вниз; Expanded — стрелка вверх (или вращение).
	•	Ховер/нажатие — лёгкая инверсия/подсветка.

⸻

8) Приёмочные критерии (DoD)
	1.	Приложение добавляет 2 NSStatusItem; переключение состояний меняет видимость правой части за счёт ширины Spacer.
	2.	Пользователь может перетащить сторонние иконки за Toggle и добиться их скрытия в «Collapsed».
	3.	Работают темы: Светлая/Тёмная/Авто; иконка корректно инвертируется.
	4.	В настройках можно выбрать иконку приложения; по умолчанию — стрелка вниз.
	5.	Работают автозапуск, горячая клавиша, таймаут автосвертки.
	6.	Пер‑дисплейные профили ширины сохраняются и применяются.
	7.	Память < 60 МБ, CPU ≈ 0% в простое.

⸻

9) План релизов
	•	v1.0: базовый функционал (Toggle/Spacer, темы, выбор иконки, хоткей, автозапуск).
	•	v1.1: быстрые профили ширины, «peek while pressed», улучшенный онбординг.
	•	v1.2: синхронизация профилей между дисплеями, экспорт/импорт настроек.

⸻

10) Риски и ограничения
	•	Apple может менять поведение компоновки меню‑бара между версиями macOS. Требуются регрессионные тесты на 13/14/15.
	•	Невозможно программно перетаскивать/скрывать чужие NSStatusItem через публичный API — только через управление шириной и пользовательское ⌘‑перетаскивание.
	•	Потенциальные конфликты с похожими утилитами (двойные Spacer’ы).

⸻

11) Тест‑план (фрагмент)
	•	Unit: сохранение/загрузка AppSettings, логика таймаутов, вычисление ширины.
	•	UI: переключение состояний, корректность тем, индикация иконки.
	•	Manual: сценарии с одним/двумя дисплеями, узкий/широкий бар, наличие выреза.

⸻

12) Технические заметки для реализации
	•	Использовать NSStatusBar.system.statusItem(withLength:) для обоих элементов.
	•	Spacer: кастомный NSStatusItem с NSView фиксированной высоты и динамической ширины (через Auto Layout или обновление frame).
	•	Анимация: NSAnimationContext/NSViewAnimation с ограничением по частоте обновления.
	•	Темы: NSApp.appearance = .aqua / .darkAqua / nil (следовать системе) + динамические шаблоны PDF.
	•	Login Item: SMAppService.mainApp.register()/unregister().
